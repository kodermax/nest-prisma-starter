version: "3"

services:
  mongo1:
    image: mongo:6
    container_name: mongo1
    command: ["--replSet", "rs", "--bind_ip_all", "--port", "30001"]
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - 30001:30001
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'rs',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok || rs.status().ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongo2:
    image: mongo:6
    container_name: mongo2
    command: ["--replSet", "rs", "--bind_ip_all", "--port", "30002"]
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - 30002:30002

  mongo3:
    image: mongo:6
    container_name: mongo3
    command: ["--replSet", "rs", "--bind_ip_all", "--port", "30003"]
    volumes:
      - ./data/mongo-3:/data/db
    ports:
      - 30003:30003
  mongosetup:
    image: mongo:6
    links:
      - mongo1
      - mongo2
      - mongo3
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: >
      mongosh --host mongo1:30001 --eval 
      '
      db = (new Mongo("mongo1:30001")).getDB("test");
      config = {
      "_id" : "rs",
      "members" : [
        {
          "_id" : 0,
          "host" : "mongo1:30001"
        },
        {
          "_id" : 1,
          "host" : "mongo2:30002"
        },
        {
          "_id" : 2,
          "host" : "mongo3:30003"
        }
      ]
      };
      rs.initiate(config);
      '      